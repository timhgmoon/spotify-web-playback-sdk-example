{"version":3,"sources":["Track.jsx","Login.js","Home.js","NavContent.js","App.js","index.js"],"names":["WebPlayback","props","useState","current_track","setTrack","lyrics","setLyrics","useEffect","fetch","currentTrack","name","artists","method","headers","token","then","res","json","tracks","items","console","log","album","images","songId","lyric","split","type","className","Card","Img","variant","src","url","alt","Body","Title","Text","map","str","uris","uri","showSaveIcon","initialVolume","playerPosition","styles","sliderColor","sliderHeight","Login","Home","melonChart","setMelonChart","dataToArr","Object","entries","e","Container","fluid","Row","Col","xs","md","lg","track","to","onClick","handleOnClick","ranking","NavContent","Navbar","Brand","Nav","Link","as","Item","App","setToken","setCurrentTrack","a","response","access_token","getToken","path","exact","render","routerProps","Track","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b6889f9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport Card from 'react-bootstrap/Card';\nimport './responsive.css';\nimport './track.css';\n\nfunction WebPlayback(props) {\n    const [current_track, setTrack] = useState();\n    const [lyrics, setLyrics] = useState();\n\n\n    useEffect(() => {\n        fetch(`https://api.spotify.com/v1/search?q=${props.currentTrack.name}&type=track&q=${props.currentTrack.artists}&type=artist&limit=1`, {\n            method: 'GET',\n            headers: {'Authorization': 'Bearer ' +  props.token}\n        })\n            .then(res => res.json())\n            .then(json => {\n                setTrack(json.tracks.items[0])\n                console.log(json.tracks.items[0])\n                console.log(json.tracks.items[0].album.images)\n            } )\n    }, [])\n\n    useEffect(() => {\n        fetch(`https://corsanywhere.herokuapp.com/https://melon.danielko.me/api/v1/lyric/${props.currentTrack.songId}`, {\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\"\n          }\n        })\n          .then(res => res.json())\n          .then(json => {\n              setLyrics(json.lyric.split('\\n'))\n          })\n        }, [])\n        \n    return (\n        <>\n        <style type=\"text/css\">\n            {\n            }\n        </style>\n        <div className=\"main-card-container\">\n            {current_track && <Card className=\"bg-dark text-white mx-auto p-1\" >\n                <Card.Img variant=\"top\" src={current_track.album.images[0].url} alt={props.currentTrack.name}/>\n                <Card.Body>\n                    <Card.Title>\n                        {props.currentTrack.artists}\n                    </Card.Title>\n                    <Card.Text>\n                        {props.currentTrack.name}\n                    </Card.Text>\n                </Card.Body>\n                \n            </Card>}\n\n            {lyrics && lyrics.map(str => <p>{str}</p>)}\n        </div>\n        {current_track && \n                <SpotifyPlayer \n                    token={props.token} \n                    uris={current_track.uri} \n                    showSaveIcon={true} \n                    initialVolume={.3}\n                    playerPosition='bottom'\n                    styles={{\n                        sliderColor: 'rgb(213, 126, 140)',\n                        sliderHeight: '10px'\n                    }}\n                />\n            }\n        </>   \n              \n    )\n}\n\nexport default WebPlayback\n","import React from 'react';\n// import {Link, Route } from 'react-router-dom';\n\nfunction Login(props) {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <a className=\"btn-spotify\" href=\"/auth/login\" >\n                    {props.token ? 'Login with Spotify' : 'Logged in'}\n                </a>\n           \n            </header>\n        </div>\n    );\n}\n\nexport default Login;\n\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nconst Home = (props) => {\n\n  const [melonChart, setMelonChart] = useState();\n  \n\n  useEffect(() => {\n    fetch('https://corsanywhere.herokuapp.com/https://melon.danielko.me/api/v1/chart/live', {\n      headers: {\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      }\n    })\n      .then(res => res.json())\n      .then(json => {\n        const dataToArr = Object.entries(json).map((e) =>  e[1]);\n        setMelonChart(dataToArr);\n      })\n    }, [])\n  \n  return (\n    <>\n    <Container fluid=\"sm, md, lg\">\n      <Card.Body>\n        <Row>\n          <Col xs={3}md lg={1}>Ranking</Col>\n          <Col xs={6} md={6} lg={3}>Track Title</Col>\n          <Col xs={3}>Artist</Col>\n        </Row>\n      </Card.Body>\n        {melonChart && melonChart.map(track => {\n          return  (\n            <Card className=\"bg-transparent\">\n              <Link to={'/songs/' + track.name} key={track.ranking}onClick={() => {\n                props.handleOnClick(track)\n              }}>\n                <Card.Body>\n                  <Row>\n                    <Col xs={3} md lg={1}>{track.ranking}.</Col>\n                    <Col xs={6} md={6} lg={3}>{track.name}</Col>\n                    <Col xs={3}>{track.artists}</Col>\n                  </Row>\n                </Card.Body>\n              </Link>\n            </Card> \n          )\n      })}\n    </Container>\n    \n    \n    </>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nconst NavContent = (props) => {\n  const checkSpotifyLogin = () => {\n    if(props.token === '') {\n      return <Nav.Link as={Link} to=\"/auth/login\">Spotify Login</Nav.Link>\n    } else {\n      return <Nav.Item>Logged In</Nav.Item>\n    }\n  }\n  \n  return (\n    <>\n    <Navbar className=\"bg-dark text-white\">\n      <Navbar.Brand>\n        <Link to='/'>\n          Top-100\n        </Link>\n      </Navbar.Brand>\n        <Nav.Link as={Link} to=\"/About\">\n          About\n        </Nav.Link>\n        {checkSpotifyLogin()}\n    </Navbar>\n    </>\n   \n  )\n}\nexport default NavContent;","import React, { useState, useEffect } from 'react';\nimport {Route, Link, Switch} from 'react-router-dom';\nimport './App.css';\nimport Track from './Track'\nimport Login from './Login'\nimport Home from './Home';\nimport NavContent from './NavContent';\n\n\nfunction App() {\n\n  const [token, setToken] = useState('');\n  const [currentTrack, setCurrentTrack] = useState();\n\n  const handleOnClick = (track) => {\n    setCurrentTrack(track);\n  }\n\n\n  useEffect(() => {\n\n    async function getToken() {\n      const response = await fetch('/auth/token');\n      const json = await response.json();\n      setToken(json.access_token);\n    }\n\n    getToken();\n\n  }, []);\n\n  return (\n    <>\n      <div className=\"app\">\n\n        <NavContent token = {token} />\n        <main>\n            <Route path='/' exact render={routerProps =>\n            <Home {...routerProps} handleOnClick={handleOnClick}/>} />\n            {/* <Route path='/Login' component={Login} /> */}\n            {/* <Route path='/About' render={routerProps => <Track {...routerProps} token={token} />} /> */}\n            <Route path=\"/songs/:song\" render={routerProps => <Track {...routerProps} currentTrack={currentTrack} token={token}/>} />\n          </main>\n        \n      </div>\n        {/* { (token === '') ? <Login/> : <Track token={token} /> } */}\n    </>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}