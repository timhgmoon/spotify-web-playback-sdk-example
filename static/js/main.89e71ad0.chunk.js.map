{"version":3,"sources":["Track.jsx","Login.js","Home.js","About.js","NavContent.js","App.js","index.js"],"names":["WebPlayback","props","useState","current_track","setTrack","lyrics","setLyrics","useEffect","fetch","currentTrack","name","artists","method","headers","token","then","res","json","tracks","items","console","log","album","images","songId","lyric","split","type","className","Card","Img","variant","src","url","alt","Body","Title","Text","map","str","uris","uri","showSaveIcon","initialVolume","playerPosition","styles","sliderColor","sliderHeight","Login","href","Home","melonChart","setMelonChart","dataToArr","Object","entries","e","Container","fluid","Row","Col","xs","md","lg","track","to","onClick","handleOnClick","ranking","About","id","Link","NavContent","Navbar","Brand","Nav","as","App","setToken","setCurrentTrack","a","response","access_token","getToken","path","exact","render","routerProps","component","Track","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89e71ad0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport Card from 'react-bootstrap/Card';\nimport './responsive.css';\nimport './track.css';\n\nfunction WebPlayback(props) {\n    const [current_track, setTrack] = useState();\n    const [lyrics, setLyrics] = useState();\n\n\n    useEffect(() => {\n        fetch(`https://api.spotify.com/v1/search?q=${props.currentTrack.name}&type=track&q=${props.currentTrack.artists}&type=artist&limit=1`, {\n            method: 'GET',\n            headers: {'Authorization': 'Bearer ' +  props.token}\n        })\n            .then(res => res.json())\n            .then(json => {\n                setTrack(json.tracks.items[0])\n                console.log(json.tracks.items[0])\n                console.log(json.tracks.items[0].album.images)\n            } )\n    }, [])\n\n    useEffect(() => {\n        fetch(`https://corsanywhere.herokuapp.com/https://melon.danielko.me/api/v1/lyric/${props.currentTrack.songId}`, {\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\"\n          }\n        })\n          .then(res => res.json())\n          .then(json => {\n              setLyrics(json.lyric.split('\\n'))\n          })\n        }, [])\n        \n    return (\n        <>\n        <style type=\"text/css\">\n            {\n            }\n        </style>\n        <div className=\"main-card-container\">\n            {current_track && <Card className=\"bg-dark text-white mx-auto p-1 m-1\" >\n                <Card.Img variant=\"top\" src={current_track.album.images[0].url} alt={props.currentTrack.name}/>\n                <Card.Body>\n                    <Card.Title>\n                        {props.currentTrack.artists}\n                    </Card.Title>\n                    <Card.Text>\n                        {props.currentTrack.name}\n                    </Card.Text>\n                </Card.Body>\n                \n            </Card>}\n\n            {lyrics && lyrics.map(str => <p>{str}</p>)}\n        </div>\n        {current_track && \n                <SpotifyPlayer \n                    token={props.token} \n                    uris={current_track.uri} \n                    showSaveIcon={true} \n                    initialVolume={.3}\n                    playerPosition='bottom'\n                    styles={{\n                        sliderColor: 'rgb(213, 126, 140)',\n                        sliderHeight: '10px'\n                    }}\n                />\n            }\n        </>   \n              \n    )\n}\n\nexport default WebPlayback\n","import React from 'react';\n\nfunction Login() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <a className=\"btn-spotify\" href=\"/auth/login\" >\n                    Login with Spotify \n                </a>\n            </header>\n        </div>\n    );\n}\n\nexport default Login;\n\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nconst Home = (props) => {\n\n  const [melonChart, setMelonChart] = useState();\n  \n  useEffect(() => {\n    fetch('https://corsanywhere.herokuapp.com/https://melon.danielko.me/api/v1/chart/live', {\n      headers: {\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      }\n    })\n      .then(res => res.json())\n      .then(json => {\n        const dataToArr = Object.entries(json).map((e) =>  e[1]);\n        setMelonChart(dataToArr);\n      })\n    }, [])\n    console.log(melonChart);\n\n  \n  return (\n    <>\n    <Container fluid=\"sm, md, lg\">\n      <Card.Body className=\"card-body-title\">\n        <Row>\n          <Col xs={3}md lg={1}>Ranking</Col>\n          <Col xs={6} md={6} lg={3}>Song Title</Col>\n          <Col xs={3}>Artist</Col>\n        </Row>\n      </Card.Body>\n        {melonChart && melonChart.map(track => {\n          return  (\n            <Card className=\"bg-transparent\">\n              <Link to={'/songs/' + track.name} key={track.ranking}onClick={() => {\n                props.handleOnClick(track)\n              }}>\n                <Card.Body>\n                  <Row>\n                    <Col xs={3} md lg={1}>{track.ranking}.</Col>\n                    <Col xs={6} md={6} lg={3}>{track.name}</Col>\n                    <Col xs={3}>{track.artists}</Col>\n                  </Row>\n                </Card.Body>\n              </Link>\n            </Card> \n          )\n      })}\n    </Container>\n    \n    \n    </>\n  )\n}\n\nexport default Home;","import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport './about.css'\nconst About = () => {\n\n  return (\n    <Container fluid>\n      <div className=\"about\">\n        <h1>About Top 100 Chart</h1>\n        <p id=\"about-p\">Bacon ipsum dolor amet brisket burgdoggen corned beef, buffalo venison pork chop picanha bresaola bacon pork loin tri-tip capicola short loin. Porchetta pork belly swine kevin turducken cow beef. Flank pork belly pastrami, shankle beef doner spare ribs. Brisket tenderloin kevin chislic, hamburger jowl jerky pastrami chuck. Flank pork loin hamburger boudin tri-tip pastrami fatback brisket chicken bacon bresaola capicola leberkas biltong shoulder. Rump sausage ham hock, andouille doner sirloin venison pork chop. Fatback flank strip steak beef tongue drumstick.</p>\n      </div>\n      <Row>\n        <h2>Api's used</h2>\n        <Col md lg={6}>\n          <Card className=\"bg-dark text-white m-5 p-2\">\n            \n              <Card.Link href=\"https://developer.spotify.com/documentation/web-api/\">\n                <Card.Img src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_Green.png\" alt=\"spotify\"/>\n              </Card.Link>\n          </Card>\n        </Col>\n        <Col md lg={6}>\n        <Card className=\"bg-dark text-white m-5 p-2\">\n            <Card.Link href=\"https://github.com/ko28/melon-api\">\n              <Card.Img src=\"https://6.viki.io/image/a2ceb3c346be4350ba4826e928d4257e.jpeg?s=900x600&e=t\" alt=\"spotify\"/>\n            </Card.Link>\n          </Card>\n        </Col>\n      </Row>\n      {/* <Row>\n        <Col xs md lg=\"auto\">\n        About Top 100 Chart\n        </Col>\n      </Row>\n      <Row>\n        <Col>Bacon ipsum dolor amet brisket burgdoggen corned beef, buffalo venison pork chop picanha bresaola bacon pork loin tri-tip capicola short loin. Porchetta pork belly swine kevin turducken cow beef. Flank pork belly pastrami, shankle beef doner spare ribs. Brisket tenderloin kevin chislic, hamburger jowl jerky pastrami chuck. Flank pork loin hamburger boudin tri-tip pastrami fatback brisket chicken bacon bresaola capicola leberkas biltong shoulder. Rump sausage ham hock, andouille doner sirloin venison pork chop. Fatback flank strip steak beef tongue drumstick.</Col>\n      </Row> */}\n      \n    </Container>\n  )\n}\n\nexport default About;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nconst NavContent = () => {\n  return (\n    <>\n    <Navbar className=\"bg-dark text-white p-3\">\n      <Navbar.Brand>\n        <Link to=\"/\">\n          Top-100\n        </Link>\n      </Navbar.Brand>\n        <Nav.Link as={Link} to=\"/About\">\n          About\n        </Nav.Link>\n        <Nav.Link as={Link} to=\"/login\">\n          Spotify Login\n        </Nav.Link>\n    </Navbar>\n  \n    \n    </>\n   \n  )\n}\n\nexport default NavContent;","import React, { useState, useEffect } from 'react';\nimport {Route, Link, Switch} from 'react-router-dom';\nimport './App.css';\nimport Track from './Track';\nimport Login from './Login';\nimport Home from './Home';\nimport About from './About';\nimport NavContent from './NavContent';\n\n\nfunction App() {\n\n  const [token, setToken] = useState('');\n  const [currentTrack, setCurrentTrack] = useState();\n\n  const handleOnClick = (track) => {\n    setCurrentTrack(track);\n  }\n\n\n  useEffect(() => {\n\n    async function getToken() {\n      const response = await fetch('/auth/token');\n      const json = await response.json();\n      setToken(json.access_token);\n    }\n\n    getToken();\n\n  }, []);\n\n  return (\n    <>\n      <div className=\"app\">\n\n        <NavContent />\n        <main>\n            <Route path='/' exact render={routerProps =>\n            <Home {...routerProps} handleOnClick={handleOnClick}/>} />\n            <Route path='/Login' component={Login} />\n            <Route path='/About' component={About} />\n            <Route path=\"/songs/:song\" render={routerProps => <Track {...routerProps} currentTrack={currentTrack} token={token}/>} />\n          </main>\n        \n      </div>\n        {/* { (token === '') ? <Login/> : <Track token={token} /> } */}\n    </>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}